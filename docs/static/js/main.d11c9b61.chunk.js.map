{"version":3,"sources":["components/Quote.jsx","components/QuoteBox.jsx","App.js","index.js"],"names":["Quote","quotes","author","HandleChangeSetQuotes","color","className","style","icon","faQuoteLeft","size","href","target","faTwitterSquare","backgroundColor","onClick","QuoteBox","setColor","useState","setQuotes","setAuthor","myArrayColors","myRandomColor","Math","floor","random","length","myNumeroAleatorio","Quotes","console","log","quote","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAkCeA,EA5BD,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,OAAQC,EAA2C,EAA3CA,OAAQC,EAAmC,EAAnCA,sBAAuBC,EAAY,EAAZA,MACpD,OACI,sBAAKC,UAAU,mBAAmBC,MAAO,CAAEF,MAAOA,GAAlD,UACI,8BACI,oBAAGC,UAAU,yBAAb,UACI,cAAC,IAAD,CAAiBE,KAAMC,IAAaC,KAAK,OAD7C,KACuDR,OAG3D,8BACI,mBAAGI,UAAU,yBAAb,SAAuCH,MAE3C,sBAAKG,UAAU,mBAAf,UACI,mBACIC,MAAO,CAAEF,MAAOA,GAChBM,KAAI,gDAA2CT,EAA3C,uBAAgEC,EAAhE,KACJS,OAAO,QAHX,SAII,cAAC,IAAD,CAAiBJ,KAAMK,IAAiBH,KAAK,SAEjD,wBACIH,MAAO,CAAEO,gBAAiBT,GAC1BU,QAASX,EAFb,8BCKDY,EAxBE,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUZ,EAAY,EAAZA,MAE1B,EAA4Ba,mBAAS,yDAArC,mBAAOhB,EAAP,KAAeiB,EAAf,KACA,EAA4BD,mBAAS,kBAArC,mBAAOf,EAAP,KAAeiB,EAAf,KAEMC,EAAgB,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,OAAQ,OAAQ,UAAW,UAAW,UAAW,UAAW,UAAW,WAChLC,EAAgBC,KAAKC,MAAMD,KAAKE,SAAWJ,EAAcK,QAEzDC,EAAoBJ,KAAKC,MAAMD,KAAKE,SAAWG,EAAO1B,OAAOwB,QACnEG,QAAQC,IAAIR,GAQZ,OACI,mCACI,cAAC,EAAD,CAAOjB,MAAOA,EAAOH,OAAQA,EAAQC,OAAQA,EAAQC,sBAR/B,WAC1Be,EAAUS,EAAO1B,OAAOyB,GAAmBI,OAC3CX,EAAUQ,EAAO1B,OAAOyB,GAAmBxB,QAC3Cc,EAASI,EAAcC,UCFhBU,MAbf,WAEE,MAAwBd,mBAAS,WAAjC,mBAAOb,EAAP,KAAcY,EAAd,KAEA,OACE,qBAAKX,UAAU,MAAMC,MAAO,CAACO,gBAAgBT,GAA7C,SACE,qBAAKC,UAAU,YAAf,SACM,cAAC,EAAD,CAAUW,SAAUA,EAAUZ,MAAOA,SCJjD4B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.d11c9b61.chunk.js","sourcesContent":["import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nimport { faQuoteLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTwitterSquare } from '@fortawesome/free-brands-svg-icons'\r\n\r\nconst Quote = ({ quotes, author, HandleChangeSetQuotes, color }) => {\r\n    return (\r\n        <div className=\"container-quote \" style={{ color: color }}>\r\n            <div>\r\n                <p className=\"text-right font-size-x\">\r\n                    <FontAwesomeIcon icon={faQuoteLeft} size=\"2x\" />  {quotes}\r\n                </p>\r\n            </div>\r\n            <div>\r\n                <p className=\"text-italic text-right\">{author}</p>\r\n            </div>\r\n            <div className=\"container-button\">\r\n                <a\r\n                    style={{ color: color }}\r\n                    href={`https://twitter.com/intent/tweet?text=${quotes}... Author: ${author} `}\r\n                    target=\"blank\">\r\n                    <FontAwesomeIcon icon={faTwitterSquare} size=\"2x\" />\r\n                </a>\r\n                <button\r\n                    style={{ backgroundColor: color }}\r\n                    onClick={HandleChangeSetQuotes} >\r\n                    New Quote\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Quote\r\n","import React from 'react'\r\nimport { useState } from \"react\";\r\nimport Quotes from \"../quotes.json\";\r\nimport Quote from './Quote';\r\n\r\nconst QuoteBox = ({ setColor, color }) => {\r\n\r\n    const [quotes, setQuotes] = useState(\"Winning isnâ€™t everything, but wanting to win is.\");\r\n    const [author, setAuthor] = useState(\"Vince Lombardi\");\r\n\r\n    const myArrayColors = [\"#3d84b8\", \"#3f3697\", \"#04009a\", \"#890596\", \"#72147e\", \"#542e71\", \"#ce1212\", \"#301b3f\", \"#222\", \"#333\", \"#440a67\", \"#ff005c\", \"#7868e6\", \"#413c69\", \"#1e212d\", \"#6930c3\"]\r\n    const myRandomColor = Math.floor(Math.random() * myArrayColors.length);\r\n\r\n    const myNumeroAleatorio = Math.floor(Math.random() * Quotes.quotes.length);\r\n    console.log(myRandomColor)\r\n\r\n    const HandleChangeSetQuotes = () => {\r\n        setQuotes(Quotes.quotes[myNumeroAleatorio].quote)\r\n        setAuthor(Quotes.quotes[myNumeroAleatorio].author)\r\n        setColor(myArrayColors[myRandomColor])\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Quote color={color} quotes={quotes} author={author} HandleChangeSetQuotes={HandleChangeSetQuotes} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default QuoteBox\r\n","\nimport { useState } from \"react\";\nimport QuoteBox from \"./components/QuoteBox\";\n\nfunction App() {\n\n  const [color, setColor]=useState(\"#e11d74\")\n\n  return (\n    <div className=\"App\" style={{backgroundColor:color}}>\n      <div className=\"container\">\n            <QuoteBox setColor={setColor} color={color}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}